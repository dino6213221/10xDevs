name: Pull Request Checks

on:
  pull_request:
    branches: [ master ]

env:
  NODE_VERSION: '22.14.0'

jobs:
  lint:
    name: 'Lint Code'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run linting
        run: npm run lint:check

  test-unit:
    name: 'Unit Tests'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run unit tests
        run: npm run test:unit

      - name: Upload unit test coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage/coverage-final.json
          flags: unit
          name: unit-coverage

  test-e2e:
    name: 'E2E Tests'
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_TEST_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_TEST_KEY }}
      SUPABASE_PUBLIC_KEY: ${{ secrets.SUPABASE_TEST_PUBLIC_KEY }}
      E2E_USERNAME_ID: ${{ secrets.E2E_USERNAME_ID }}
      E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
      E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Playwright browsers
        run: npm run e2e:install

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Upload test results
        uses: actions/upload-artifact@v5
        if: always()
        with:
          name: e2e-test-results
          path: test-results/
          retention-days: 30

  pr-comment:
    name: 'PR Status Comment'
    runs-on: ubuntu-latest
    needs: [lint, test-unit, test-e2e]
    if: always() && github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Create or update PR comment
        uses: peter-evans/create-or-update-comment@v5
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## Pull Request Checks Status

            | Check | Status |
            |-------|--------|
            | üîç **Linting** | ${{ needs.lint.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |
            | üß™ **Unit Tests** | ${{ needs.test-unit.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |
            | üåê **E2E Tests** | ${{ needs.test-e2e.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |

            ${{ needs.lint.result == 'success' && needs.test-unit.result == 'success' && needs.test-e2e.result == 'success' && '**üéâ All checks passed! Your PR is ready for review.**' || '**‚ö†Ô∏è Some checks failed. Please review the details above and fix any issues.**' }}
          edit-mode: replace
